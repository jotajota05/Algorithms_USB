;; Object Proyecto/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Proyecto/"
  :tables (list 
   (semanticdb-table "List.c"
    :major-mode 'c-mode
    :tags '(("stdio.h" include (:system-flag t) nil [168 186]) ("stdlib.h" include (:system-flag t) nil [187 206]) ("List.h" include nil nil [207 224]) ("newList" function (:type ("List" type (:type "class") nil nil)) nil [259 428]) ("head" function (:pointer 1 :arguments (("llist" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [488 499])) :type "void") nil [477 550]) ("end" function (:pointer 1 :arguments (("llist" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [604 615])) :type "void") nil [594 665]) ("size" function (:arguments (("llist" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [709 720])) :type "int") nil [700 797]) ("init" function (:arguments (("llist" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [859 870])) :type ("List" type (:type "class") nil nil)) nil [849 890]) ("ended" function (:arguments (("llist" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [953 964])) :type "int") nil [943 1039]) ("next" function (:arguments (("llist" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1102 1113])) :type ("List" type (:type "class") nil nil)) nil [1092 1139]) ("yield" function (:pointer 1 :arguments (("llist" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1207 1218])) :type "void") nil [1195 1244]) ("append" function (:arguments (("llist" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1305 1316]) ("obj" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [1317 1327])) :type ("List" type (:type "class") nil nil)) nil [1293 1860]) ("deleteEnd" function (:arguments (("llist" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1938 1949])) :type "void") nil [1923 2326]) ("destroy" function (:arguments (("llist" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2397 2408])) :type "void") nil [2384 2610]) ("delete" function (:arguments (("llist" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2675 2686]) ("obj" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [2687 2697])) :type "void") nil [2663 4318]) ("search" function (:arguments (("llist" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4394 4405]) ("obj" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [4406 4416])) :type "int") nil [4383 4632]) ("freeList" function (:arguments (("llist" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4702 4713])) :type "void") nil [4688 4815]))
    :file "List.c"
    :pointmax 7848
    :unmatched-syntax 'nil
    )
   (semanticdb-table "List.h"
    :major-mode 'c-mode
    :tags '(("LIST_H" variable (:constant-flag t) nil [184 243]) ("list" type (:members (("head" variable (:pointer 1 :type "void") (reparse-symbol classsubparts) [253 264]) ("tail" variable (:pointer 1 :type ("list" type (:prototype t :type "struct") nil nil)) (reparse-symbol classsubparts) [267 285]) ("end" variable (:pointer 1 :type "void") (reparse-symbol classsubparts) [288 298]) ("size" variable (:type "int") (reparse-symbol classsubparts) [301 310])) :type "struct") nil [237 313]) ("List" type (:typedef ("list" type (:prototype t :type "struct") nil nil) :pointer 1 :superclasses "list" :type "typedef") nil [315 342]) ("newList" function (:prototype-flag t :type ("List" type (:type "class") nil nil)) nil [420 435]) ("head" function (:prototype-flag t :pointer 1 :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [485 490])) :type "void") nil [474 491]) ("end" function (:prototype-flag t :pointer 1 :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [502 507])) :type "void") nil [492 508]) ("size" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [518 523])) :type "int") nil [509 524]) ("init" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [579 584])) :type ("List" type (:type "class") nil nil)) nil [569 585]) ("ended" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [596 601])) :type "int") nil [586 602]) ("next" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [613 618])) :type ("List" type (:type "class") nil nil)) nil [603 619]) ("yield" function (:prototype-flag t :pointer 1 :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [632 637])) :type "void") nil [620 638]) ("append" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [705 710]) ("" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [711 717])) :type ("List" type (:type "class") nil nil)) nil [693 718]) ("deleteEnd" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [734 739])) :type "void") nil [719 740]) ("destroy" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [754 759])) :type "void") nil [741 760]) ("delete" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [773 778]) ("" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [779 785])) :type "void") nil [761 786]) ("search" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [799 804]) ("" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [805 811])) :type "int") nil [787 812]) ("freeList" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [827 832])) :type "void") nil [813 833]))
    :file "List.h"
    :pointmax 912
    :unmatched-syntax 'nil
    )
   (semanticdb-table "solver.c"
    :major-mode 'c-mode
    :tags '(("stdio.h" include (:system-flag t) (dependency-file "/usr/include/stdio.h") [1 19]) ("stdlib.h" include (:system-flag t) (dependency-file "/usr/include/stdlib.h") [20 39]) ("string.h" include (:system-flag t) (dependency-file "/usr/include/string.h") [40 59]) ("CNF_Form.h" include nil nil [60 81]) ("procesarArchivo" function (:arguments (("archivo" variable (:pointer 1 :type ("FILE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [103 117])) :type "int") nil [83 1947]) ("main" function (:arguments (("argc" variable (:type "int") (reparse-symbol arg-sub-list) [1954 1963]) ("argv" variable (:pointer 2 :type "char") (reparse-symbol arg-sub-list) [1964 1976])) :type "int") nil [1949 2405]))
    :file "solver.c"
    :pointmax 2406
    :unmatched-syntax 'nil
    )
   (semanticdb-table "CNF_Form.h"
    :major-mode 'c-mode
    :tags '(("CNF_FORM_H" variable (:constant-flag t) nil [246 258]) ("List.h" include nil nil [257 274]) ("TRUE" variable (:constant-flag t) nil [321 341]) ("FALSE" variable (:constant-flag t) nil [336 363]) ("UNASSIGNED" variable (:constant-flag t) nil [353 429]) ("asignation" type (:members (("desition" variable (:type "int") (reparse-symbol classsubparts) [445 458]) ("variable" variable (:type "int") (reparse-symbol classsubparts) [508 521]) ("value" variable (:type "int") (reparse-symbol classsubparts) [524 534]) ("level" variable (:type "int") (reparse-symbol classsubparts) [537 547])) :type "struct") nil [423 550]) ("Asignation" type (:typedef ("asignation" type (:prototype t :type "struct") nil nil) :pointer 1 :superclasses "asignation" :type "typedef") nil [552 591]) ("treeVertice" type (:members (("asig" variable (:type ("Asignation" type (:type "class") nil nil)) (reparse-symbol classsubparts) [684 700]) ("incident" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol classsubparts) [703 717])) :type "struct") nil [661 720]) ("TreeVertice" type (:typedef ("treeVertice" type (:prototype t :type "struct") nil nil) :pointer 1 :superclasses "treeVertice" :type "typedef") nil [722 763]) ("asignationTree" type (:members (("incidents" variable (:pointer 1 :type ("TreeVertice" type (:type "class") nil nil)) (reparse-symbol classsubparts) [847 870]) ("leaf" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol classsubparts) [873 883]) ("asigMaxLevel" variable (:type ("Asignation" type (:type "class") nil nil)) (reparse-symbol classsubparts) [886 910])) :type "struct") nil [821 913]) ("AsignationTree" type (:typedef ("asignationTree" type (:prototype t :type "struct") nil nil) :pointer 1 :superclasses "asignationTree" :type "typedef") nil [915 962]) ("literal" type (:members (("value" variable (:type "int") (reparse-symbol classsubparts) [1045 1055]) ("asig" variable (:type ("Asignation" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1058 1074]) ("indVariable" variable (:type "int") (reparse-symbol classsubparts) [1077 1093]) ("clauses" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1096 1109])) :type "struct") nil [1026 1112]) ("Literal" type (:typedef ("literal" type (:prototype t :type "struct") nil nil) :pointer 1 :superclasses "literal" :type "typedef") nil [1114 1147]) ("clause" type (:members (("numSat" variable (:type "int") (reparse-symbol classsubparts) [1229 1240]) ("numNotSat" variable (:type "int") (reparse-symbol classsubparts) [1243 1257]) ("isSatisf" variable (:type "int") (reparse-symbol classsubparts) [1260 1273]) ("size" variable (:type "int") (reparse-symbol classsubparts) [1276 1285]) ("literals" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1288 1302]) ("unitLit" variable (:type ("Literal" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1305 1321])) :type "struct") nil [1211 1324]) ("Clause" type (:typedef ("clause" type (:prototype t :type "struct") nil nil) :pointer 1 :superclasses "clause" :type "typedef") nil [1326 1357]) ("form" type (:members (("numLiterals" variable (:type "int") (reparse-symbol classsubparts) [1422 1438]) ("numVar" variable (:type "int") (reparse-symbol classsubparts) [1441 1452]) ("numClauses" variable (:type "int") (reparse-symbol classsubparts) [1455 1470]) ("literals" variable (:pointer 1 :type ("Literal" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1473 1491]) ("clauses" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1494 1507]) ("satClauses" variable (:type "int") (reparse-symbol classsubparts) [1510 1525]) ("numVarAssig" variable (:type "int") (reparse-symbol classsubparts) [1528 1544]) ("isTrue" variable (:type "int") (reparse-symbol classsubparts) [1547 1558]) ("assigUnitProp" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1561 1580])) :type "struct") nil [1406 1583]) ("CNF_Form" type (:typedef ("form" type (:prototype t :type "struct") nil nil) :pointer 1 :superclasses "form" :type "typedef") nil [1585 1616]) ("CNF_createClause" function (:prototype-flag t :arguments (("" variable (:type "int") (reparse-symbol arg-sub-list) [1697 1701])) :type ("Clause" type (:type "class") nil nil)) nil [1673 1702]) ("CNF_create" function (:prototype-flag t :arguments (("" variable (:type "int") (reparse-symbol arg-sub-list) [1723 1727]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [1728 1732])) :type ("CNF_Form" type (:type "class") nil nil)) nil [1703 1733]) ("CNF_addClause" function (:prototype-flag t :arguments (("" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1752 1761]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [1762 1768]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [1770 1774])) :type "int") nil [1734 1775]) ("map" function (:prototype-flag t :arguments (("" variable (:type "int") (reparse-symbol arg-sub-list) [1833 1837])) :type "int") nil [1825 1838]) ("getVar" function (:prototype-flag t :arguments (("" variable (:type "int") (reparse-symbol arg-sub-list) [1850 1854])) :type "int") nil [1839 1855]) ("searchLitPos" function (:prototype-flag t :arguments (("" variable (:pointer 1 :type ("Literal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1873 1883]) ("" variable (:type ("Literal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1884 1892]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [1893 1897])) :type "int") nil [1856 1898]) ("CNF_DPLL" function (:prototype-flag t :arguments (("" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1945 1954]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [1954 1958]) ("" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1959 1974])) :type "int") nil [1932 1975]) ("isSolution" function (:prototype-flag t :arguments (("" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1991 2000])) :type "int") nil [1976 2001]) ("chooseLiteral" function (:prototype-flag t :arguments (("" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2020 2029])) :type "int") nil [2002 2030]) ("assignLiteral" function (:prototype-flag t :arguments (("" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2118 2127]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2128 2132]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2133 2137]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2138 2142]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2143 2147]) ("" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2147 2162])) :type "void") nil [2099 2163]) ("updateClauses" function (:prototype-flag t :arguments (("" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2183 2192]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2193 2197]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2198 2202]) ("" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2203 2218])) :type "void") nil [2164 2219]) ("restoreState" function (:prototype-flag t :arguments (("" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2238 2247]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2248 2252]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2253 2257])) :type "void") nil [2220 2258]) ("restoreClauses" function (:prototype-flag t :arguments (("" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2279 2288]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2289 2293]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2294 2298])) :type "void") nil [2259 2299]) ("unitPropagation" function (:prototype-flag t :arguments (("" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2381 2390]) ("" variable (:pointer 1 :type "int") (reparse-symbol arg-sub-list) [2391 2396]) ("" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2396 2411]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2411 2415])) :type "void") nil [2360 2416]) ("restoreUnitProp" function (:prototype-flag t :arguments (("" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2438 2447]) ("" variable (:pointer 1 :type "int") (reparse-symbol arg-sub-list) [2448 2453])) :type "void") nil [2417 2454]) ("isUnit" function (:prototype-flag t :arguments (("" variable (:type ("Clause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2466 2473])) :type "int") nil [2455 2474]) ("getUnitLiteral" function (:prototype-flag t :arguments (("" variable (:type ("Clause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2495 2502])) :type "void") nil [2475 2503]) ("pureLiteralElim" function (:prototype-flag t :arguments (("" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2525 2534]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2534 2538]) ("" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2538 2553])) :type "void") nil [2504 2554]) ("new_AsignationTree" function (:prototype-flag t :type ("AsignationTree" type (:type "class") nil nil)) nil [2597 2633]) ("init_Asignation" function (:prototype-flag t :arguments (("" variable (:type ("Asignation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2655 2666]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2667 2671]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2672 2676]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2677 2681]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2681 2685])) :type "void") nil [2634 2686]) ("AsignationTree_insert" function (:prototype-flag t :arguments (("" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2714 2730]) ("" variable (:type ("Asignation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2730 2742]) ("" variable (:type ("TreeVertice" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2742 2754])) :type "void") nil [2687 2755]) ("findMaxLevelAsignation" function (:prototype-flag t :arguments (("" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2790 2805])) :type ("Asignation" type (:type "class") nil nil)) nil [2756 2806]) ("AsignationTree_findLeaf" function (:prototype-flag t :arguments (("" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2836 2851]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2851 2855]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [2855 2859])) :type "void") nil [2807 2860]) ("AsignationTree_update" function (:prototype-flag t :arguments (("" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2888 2903])) :type "void") nil [2861 2904]) ("addLearnClause" function (:prototype-flag t :arguments (("" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2925 2934]) ("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2935 2940])) :type "void") nil [2905 2941]) ("insertImplicationsForAClause" function (:prototype-flag t :arguments (("" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2976 2991]) ("" variable (:type ("Clause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2992 2999]) ("" variable (:type "int") (reparse-symbol arg-sub-list) [3000 3004])) :type "void") nil [2942 3005]))
    :file "CNF_Form.h"
    :pointmax 3032
    :unmatched-syntax 'nil
    )
   (semanticdb-table "CNF_Form.c"
    :major-mode 'c-mode
    :tags '(("stdio.h" include (:system-flag t) nil [206 224]) ("stdlib.h" include (:system-flag t) nil [225 244]) ("time.h" include (:system-flag t) nil [245 262]) ("CNF_Form.h" include nil nil [263 284]) ("backtrackToLevel" variable (:type "int") nil [286 307]) ("init_Asignation" function (:arguments (("a" variable (:type ("Asignation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [330 343]) ("variable" variable (:type "int") (reparse-symbol arg-sub-list) [343 356]) ("value" variable (:type "int") (reparse-symbol arg-sub-list) [357 367]) ("level" variable (:type "int") (reparse-symbol arg-sub-list) [368 378]) ("desition" variable (:type "int") (reparse-symbol arg-sub-list) [379 392])) :type "void") nil [309 491]) ("new_AsignationTree" function (:arguments (("numVariables" variable (:type "int") (reparse-symbol arg-sub-list) [527 544])) :type ("AsignationTree" type (:type "class") nil nil)) nil [493 1034]) ("AsignationTree_insert" function (:arguments (("t" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1063 1080]) ("in" variable (:type ("Asignation" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1081 1095]) ("dest" variable (:type ("TreeVertice" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1096 1113])) :type "void") nil [1036 1530]) ("findMaxLevelAsignation" function (:arguments (("t" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1566 1583])) :type ("Asignation" type (:type "class") nil nil)) nil [1532 1842]) ("AsignationTree_findLeaf" function (:arguments (("t" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1873 1890]) ("asig" variable (:type "int") (reparse-symbol arg-sub-list) [1891 1900]) ("max" variable (:type "int") (reparse-symbol arg-sub-list) [1900 1908])) :type "void") nil [1844 2470]) ("AsignationTree_update" function (:arguments (("t" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2499 2516])) :type "void") nil [2472 2862]) ("addLearnClause" function (:arguments (("f" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4144 4155]) ("leafs" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4156 4167])) :type "void") nil [4124 4541]) ("CNF_createClause" function (:arguments (("size" variable (:type "int") (reparse-symbol arg-sub-list) [4725 4734])) :type ("Clause" type (:type "class") nil nil)) nil [4701 4912]) ("CNF_create" function (:arguments (("numVar" variable (:type "int") (reparse-symbol arg-sub-list) [5096 5107]) ("numCla" variable (:type "int") (reparse-symbol arg-sub-list) [5108 5119])) :type ("CNF_Form" type (:type "class") nil nil)) nil [5076 5708]) ("CNF_addClause" function (:arguments (("f" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5861 5872]) ("lit" variable (:dereference 1 :type "int") (reparse-symbol arg-sub-list) [5873 5883]) ("size" variable (:type "int") (reparse-symbol arg-sub-list) [5884 5893])) :type "int") nil [5843 6186]) ("map" function (:arguments (("etiquetaLit" variable (:type "int") (reparse-symbol arg-sub-list) [6385 6401])) :type "int") nil [6377 6622]) ("getVar" function (:arguments (("lit" variable (:type "int") (reparse-symbol arg-sub-list) [6792 6800])) :type "int") nil [6781 6885]) ("CNF_DPLL" function (:arguments (("f" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7120 7131]) ("level" variable (:type "int") (reparse-symbol arg-sub-list) [7132 7142]) ("t" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7142 7159])) :type "int") nil [7107 8422]) ("isSolution" function (:arguments (("f" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8599 8610])) :type "int") nil [8584 8944]) ("chooseLiteral" function (:arguments (("f" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9110 9121])) :type "int") nil [9092 9259]) ("assignLiteral" function (:arguments (("f" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9451 9462]) ("lit" variable (:type "int") (reparse-symbol arg-sub-list) [9463 9471]) ("value" variable (:type "int") (reparse-symbol arg-sub-list) [9472 9482]) ("level" variable (:type "int") (reparse-symbol arg-sub-list) [9482 9492]) ("desition" variable (:type "int") (reparse-symbol arg-sub-list) [9493 9506]) ("t" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9506 9523])) :type "void") nil [9432 10214]) ("updateClauses" function (:arguments (("f" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10419 10430]) ("posLit1" variable (:type "int") (reparse-symbol arg-sub-list) [10431 10443]) ("posLit2" variable (:type "int") (reparse-symbol arg-sub-list) [10444 10456]) ("t" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10457 10474])) :type "void") nil [10400 11717]) ("restoreState" function (:arguments (("f" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11896 11907]) ("lit" variable (:type "int") (reparse-symbol arg-sub-list) [11908 11916]) ("value" variable (:type "int") (reparse-symbol arg-sub-list) [11917 11927])) :type "void") nil [11878 12299]) ("restoreClauses" function (:arguments (("f" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12541 12552]) ("posLit1" variable (:type "int") (reparse-symbol arg-sub-list) [12553 12565]) ("posLit2" variable (:type "int") (reparse-symbol arg-sub-list) [12566 12578])) :type "void") nil [12521 13494]) ("insertImplicationsForAClause" function (:arguments (("t" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13530 13547]) ("clau" variable (:type ("Clause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13547 13559]) ("var" variable (:type "int") (reparse-symbol arg-sub-list) [13559 13567])) :type "void") nil [13496 13823]) ("unitPropagation" function (:arguments (("f" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14062 14073]) ("numAssigUP" variable (:pointer 1 :type "int") (reparse-symbol arg-sub-list) [14074 14090]) ("t" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14090 14107]) ("level" variable (:type "int") (reparse-symbol arg-sub-list) [14107 14117])) :type "void") nil [14041 14920]) ("restoreUnitProp" function (:arguments (("f" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15200 15211]) ("numAssigUP" variable (:pointer 1 :type "int") (reparse-symbol arg-sub-list) [15212 15228])) :type "void") nil [15179 15776]) ("isUnit" function (:arguments (("cl" variable (:type ("Clause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15942 15952])) :type "int") nil [15931 16062]) ("getUnitLiteral" function (:arguments (("cl" variable (:type ("Clause" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16185 16195])) :type "void") nil [16165 16378]) ("searchLitPos" function (:arguments (("literals" variable (:pointer 1 :type ("Literal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16565 16583]) ("l" variable (:type ("Literal" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16584 16594]) ("tam" variable (:type "int") (reparse-symbol arg-sub-list) [16595 16603])) :type "int") nil [16548 16709]) ("pureLiteralElim" function (:arguments (("f" variable (:type ("CNF_Form" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16848 16859]) ("level" variable (:type "int") (reparse-symbol arg-sub-list) [16859 16869]) ("t" variable (:type ("AsignationTree" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16869 16886])) :type "void") nil [16827 17095]))
    :file "CNF_Form.c"
    :pointmax 17096
    :unmatched-syntax 'nil
    )
   (semanticdb-table "satSolver.py"
    :major-mode 'python-mode
    :tags '(("sys" include nil (dependency-file none) [1 11]) ("os" include nil (dependency-file none) [12 21]) ("subprocess" include nil (dependency-file none) [22 46]) ("time" include nil (dependency-file none) [47 58]) ("getRow" function (:arguments (("literal" variable nil (reparse-symbol function_parameters) [104 111]) ("n" variable nil (reparse-symbol function_parameters) [112 113]))) nil [93 150]) ("getCol" function (:arguments (("literal" variable nil (reparse-symbol function_parameters) [198 205]) ("n" variable nil (reparse-symbol function_parameters) [206 207]))) nil [187 245]) ("getValue" function (:arguments (("literal" variable nil (reparse-symbol function_parameters) [293 300]) ("n" variable nil (reparse-symbol function_parameters) [301 302]))) nil [280 340]) ("writeSudoku" function (:arguments (("name" variable nil (reparse-symbol function_parameters) [402 406]) ("out" variable nil (reparse-symbol function_parameters) [407 410]) ("n" variable nil (reparse-symbol function_parameters) [411 412]))) nil [386 1284]) ("input_file" variable nil nil [1519 1564]) ("run_print" variable nil nil [1565 1600]) ("count" variable nil nil [1601 1610]) ("print" code nil nil [1638 1674]) ("sub" code nil nil [1675 1718]) ("sub" code nil nil [1766 1820]) ("sub" code nil nil [1821 1881]) ("print" code nil nil [1883 1935]) ("while" code nil nil [2006 5065]) ("sub" code nil nil [5144 5209]) ("print" code nil nil [5211 5295]) ("print" code nil nil [5296 5379]))
    :file "satSolver.py"
    :pointmax 5380
    :unmatched-syntax 'nil
    )
   (semanticdb-table "translator.c"
    :major-mode 'c-mode
    :tags '(("stdio.h" include (:system-flag t) (dependency-file "/usr/include/stdio.h") [1 19]) ("stdlib.h" include (:system-flag t) (dependency-file "/usr/include/stdlib.h") [20 39]) ("unistd.h" include (:system-flag t) (dependency-file "/usr/include/unistd.h") [40 59]) ("sudoku2sat.h" include nil nil [61 84]) ("main" function (:arguments (("argc" variable (:type "int") (reparse-symbol arg-sub-list) [95 104]) ("argv" variable (:pointer 2 :type "char") (reparse-symbol arg-sub-list) [105 117])) :type "int") nil [86 582]))
    :file "translator.c"
    :pointmax 583
    )
   (semanticdb-table "sudoku2sat.h"
    :major-mode 'c-mode
    :tags '(("__SUDOKU2SAT_H" variable (:constant-flag t) nil [264 283]) ("literal" function (:prototype-flag t :arguments (("row" variable (:type "int") (reparse-symbol arg-sub-list) [292 300]) ("col" variable (:type "int") (reparse-symbol arg-sub-list) [301 309]) ("value" variable (:type "int") (reparse-symbol arg-sub-list) [310 320])) :type "int") nil [280 321]) ("atLeastOne" function (:prototype-flag t :arguments (("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [338 351]) ("n" variable (:type "int") (reparse-symbol arg-sub-list) [352 358])) :type "void") nil [322 359]) ("justOne" function (:prototype-flag t :arguments (("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [373 386]) ("n" variable (:type "int") (reparse-symbol arg-sub-list) [387 393])) :type "void") nil [360 394]) ("noRepeatOnRow" function (:prototype-flag t :arguments (("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [414 427]) ("n" variable (:type "int") (reparse-symbol arg-sub-list) [428 434])) :type "void") nil [395 435]) ("noRepeatOnCol" function (:prototype-flag t :arguments (("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [455 468]) ("n" variable (:type "int") (reparse-symbol arg-sub-list) [469 475])) :type "void") nil [436 476]) ("noRepeatSquare" function (:prototype-flag t :arguments (("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [497 510]) ("n" variable (:type "int") (reparse-symbol arg-sub-list) [511 517])) :type "void") nil [477 518]) ("noRepeat" function (:prototype-flag t :arguments (("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [533 546]) ("n" variable (:type "int") (reparse-symbol arg-sub-list) [547 553])) :type "void") nil [519 554]) ("problemLine" function (:prototype-flag t :arguments (("input" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [571 583]) ("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [583 596]) ("num" variable (:type "int") (reparse-symbol arg-sub-list) [597 605])) :type "int") nil [555 606]) ("firstAssig" function (:prototype-flag t :arguments (("input" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [623 635]) ("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [636 649])) :type "void") nil [607 650]))
    :file "sudoku2sat.h"
    :pointmax 660
    :unmatched-syntax 'nil
    )
   (semanticdb-table "sudoku2sat.c"
    :major-mode 'c-mode
    :tags '(("stdio.h" include (:system-flag t) (dependency-file "/usr/include/stdio.h") [220 238]) ("stdlib.h" include (:system-flag t) (dependency-file "/usr/include/stdlib.h") [239 258]) ("math.h" include (:system-flag t) (dependency-file "/usr/include/math.h") [259 276]) ("literal" function (:arguments (("n" variable (:type "int") (reparse-symbol arg-sub-list) [511 517]) ("row" variable (:type "int") (reparse-symbol arg-sub-list) [518 526]) ("col" variable (:type "int") (reparse-symbol arg-sub-list) [527 535]) ("value" variable (:type "int") (reparse-symbol arg-sub-list) [536 546])) :type "int") nil [499 594]) ("atLeastOne" function (:arguments (("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [779 792]) ("n" variable (:type "int") (reparse-symbol arg-sub-list) [793 799])) :type "void") nil [763 1049]) ("justOne" function (:arguments (("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [1228 1241]) ("n" variable (:type "int") (reparse-symbol arg-sub-list) [1242 1248])) :type "void") nil [1215 1636]) ("noRepeatOnRow" function (:arguments (("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [1822 1835]) ("n" variable (:type "int") (reparse-symbol arg-sub-list) [1836 1842])) :type "void") nil [1803 2275]) ("noRepeatOnCol" function (:arguments (("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [2464 2477]) ("n" variable (:type "int") (reparse-symbol arg-sub-list) [2478 2484])) :type "void") nil [2445 2917]) ("noRepeatSquare" function (:arguments (("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [3105 3118]) ("n" variable (:type "int") (reparse-symbol arg-sub-list) [3119 3125])) :type "void") nil [3085 3716]) ("noRepeat" function (:arguments (("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [3905 3918]) ("n" variable (:type "int") (reparse-symbol arg-sub-list) [3919 3925])) :type "void") nil [3891 4021]) ("problemLine" function (:arguments (("input" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [4204 4216]) ("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [4217 4230]) ("num" variable (:type "int") (reparse-symbol arg-sub-list) [4231 4239])) :type "int") nil [4188 4508]) ("firstAssig" function (:arguments (("input" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [4665 4677]) ("output" variable (:pointer 1 :type "char") (reparse-symbol arg-sub-list) [4678 4691])) :type "void") nil [4649 4987]))
    :file "sudoku2sat.c"
    :pointmax 4988
    :unmatched-syntax 'nil
    )
   (semanticdb-table "List2.h"
    :major-mode 'c-mode
    :tags '(("LIST_H" variable (:constant-flag t) nil [184 245]) ("List" type (:typedef ("list" type (:prototype t :type "struct") nil nil) :pointer 1 :superclasses "list" :type "typedef") nil [238 265]) ("newList" function (:prototype-flag t :type ("List" type (:type "class") nil nil)) nil [343 358]) ("head" function (:prototype-flag t :pointer 1 :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [408 413])) :type "void") nil [397 414]) ("end" function (:prototype-flag t :pointer 1 :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [425 430])) :type "void") nil [415 431]) ("size" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [441 446])) :type "int") nil [432 447]) ("init" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [502 507])) :type ("List" type (:type "class") nil nil)) nil [492 508]) ("ended" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [519 524])) :type "int") nil [509 525]) ("next" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [536 541])) :type ("List" type (:type "class") nil nil)) nil [526 542]) ("yield" function (:prototype-flag t :pointer 1 :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [555 560])) :type "void") nil [543 561]) ("append" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [628 633]) ("" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [634 640])) :type ("List" type (:type "class") nil nil)) nil [616 641]) ("deleteEnd" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [657 662])) :type "void") nil [642 663]) ("destroy" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [677 682])) :type "void") nil [664 683]) ("delete" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [696 701]) ("" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [702 708])) :type "void") nil [684 709]) ("search" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [722 727]) ("" variable (:pointer 1 :type "void") (reparse-symbol arg-sub-list) [728 734])) :type "int") nil [710 735]) ("freeList" function (:prototype-flag t :arguments (("" variable (:type ("List" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [750 755])) :type "void") nil [736 756]))
    :file "List2.h"
    :pointmax 835
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
